# require "pry"
# require "active_support/all"

puzzle_input = ["forward9", "forward9", "forward3", "down2", "forward8", "down8", "forward1", "down6", "down9", "down9", "forward1", "up5", "up4", "up8", "down6", "down7", "forward4", "forward6", "forward2", "forward2", "forward4", "down2", "down6", "forward6", "forward9", "up4", "up6", "down2", "forward7", "up7", "down8", "down4", "down6", "forward1", "down2", "up1", "forward8", "down9", "forward6", "up9", "down8", "forward5", "forward8", "down8", "up3", "up9", "down2", "down2", "forward5", "up7", "forward5", "down6", "forward4", "down2", "up2", "up7", "up1", "down4", "down8", "forward6", "down2", "forward7", "down1", "forward7", "forward1", "up1", "down4", "down3", "down4", "down4", "up8", "down1", "up7", "forward8", "down5", "up1", "down4", "down3", "forward4", "up7", "forward1", "down4", "down2", "down4", "up8", "up6", "down1", "up3", "down5", "forward4", "down3", "forward9", "down9", "forward2", "down4", "up3", "down4", "forward1", "forward7", "forward9", "forward7", "forward3", "forward6", "down4", "forward7", "down5", "down1", "forward7", "up1", "down8", "down7", "down7", "down7", "down3", "forward4", "forward6", "forward6", "forward1", "down7", "down6", "down8", "up5", "down7", "up6", "forward9", "down7", "down1", "down9", "forward8", "up5", "down6", "forward3", "up2", "down1", "forward2", "down3", "up6", "forward8", "forward1", "forward3", "down9", "forward1", "down3", "up7", "forward8", "up8", "down7", "down2", "forward3", "up7", "forward6", "down7", "down6", "up5", "forward9", "down7", "up5", "forward6", "up5", "up6", "forward6", "down8", "down1", "forward7", "forward6", "down5", "down6", "forward9", "down6", "up5", "forward9", "forward4", "down1", "forward5", "down4", "forward5", "forward1", "down1", "forward4", "down5", "forward4", "up8", "down1", "forward6", "down5", "forward8", "forward8", "forward5", "down7", "down4", "forward4", "up1", "up8", "down6", "up5", "forward6", "forward5", "forward9", "down3", "down5", "forward3", "down6", "forward6", "up7", "up6", "down6", "down1", "forward8", "forward9", "up5", "forward8", "forward9", "forward9", "down2", "down8", "forward8", "down2", "up8", "down2", "down2", "up1", "down5", "down6", "down1", "down8", "down9", "forward3", "forward2", "down6", "up8", "forward9", "forward7", "forward1", "down8", "up8", "forward8", "down5", "down3", "up3", "forward6", "forward5", "down4", "forward4", "down4", "forward5", "forward9", "forward2", "forward9", "down1", "down3", "down6", "forward6", "down7", "forward3", "forward4", "forward1", "down6", "forward1", "forward4", "forward2", "forward2", "forward1", "forward2", "down1", "up2", "forward1", "down3", "forward8", "down3", "down9", "forward5", "down3", "down3", "forward2", "forward9", "down9", "forward4", "down2", "forward5", "up8", "down4", "forward5", "down1", "forward9", "down1", "forward7", "forward2", "down2", "down6", "up3", "forward7", "up4", "forward7", "forward6", "down8", "forward2", "down3", "forward9", "forward4", "forward8", "down6", "forward8", "down9", "down2", "down3", "forward1", "down5", "down3", "forward2", "forward7", "down4", "down3", "forward9", "down2", "forward2", "forward1", "up6", "up4", "down5", "forward5", "up8", "down7", "forward6", "down5", "forward3", "forward3", "forward7", "up9", "up6", "down5", "up7", "forward2", "forward5", "down9", "down6", "forward7", "down9", "up2", "up5", "forward1", "forward8", "forward9", "up8", "forward9", "forward5", "up9", "down4", "down7", "forward2", "forward1", "down4", "up8", "down5", "down7", "down9", "down3", "down9", "up8", "up7", "up8", "down8", "down2", "down6", "down6", "up5", "up9", "forward1", "down8", "up4", "up3", "forward7", "up7", "down3", "up1", "forward3", "down7", "forward8", "forward2", "down6", "down2", "up7", "up5", "forward7", "forward1", "forward6", "up6", "forward5", "down2", "up4", "forward2", "down9", "forward6", "forward3", "forward3", "forward4", "forward2", "down6", "forward9", "forward7", "down4", "up1", "forward4", "down6", "down6", "up1", "up1", "forward3", "down5", "up5", "down3", "down6", "up8", "down2", "up6", "up1", "forward8", "up6", "down8", "forward9", "forward4", "forward9", "down7", "down9", "down6", "down1", "forward9", "forward9", "down6", "down5", "up6", "down9", "up4", "up5", "forward8", "down4", "down5", "forward8", "forward7", "down2", "forward2", "forward6", "forward7", "down1", "down7", "down1", "down6", "forward2", "up2", "down4", "down8", "forward1", "down1", "down3", "down3", "up9", "down9", "forward3", "up4", "forward1", "down9", "down8", "down9", "forward5", "forward4", "up3", "down8", "forward2", "down3", "up5", "forward4", "down7", "down8", "down9", "forward8", "down8", "forward4", "down6", "down3", "forward5", "down3", "down9", "down4", "up8", "forward4", "up6", "down3", "forward6", "down9", "down7", "forward7", "forward3", "forward2", "forward4", "down4", "down5", "up9", "down2", "down6", "down9", "forward7", "forward3", "up3", "forward3", "down4", "down7", "forward2", "down2", "forward3", "down8", "down7", "down7", "forward2", "forward2", "up6", "forward8", "forward9", "up3", "forward8", "forward5", "forward7", "up3", "forward3", "forward6", "down5", "down5", "down4", "forward1", "forward8", "forward4", "forward3", "down1", "forward8", "down4", "up5", "forward4", "down2", "forward7", "down2", "forward9", "down1", "forward6", "forward8", "forward6", "forward7", "forward1", "forward6", "down5", "up3", "forward7", "down6", "forward2", "down2", "forward8", "forward9", "up7", "forward1", "forward1", "up1", "forward1", "down2", "forward6", "down9", "up1", "up2", "forward6", "forward1", "forward7", "down1", "up8", "forward7", "up6", "up4", "down1", "forward2", "down4", "down1", "down7", "down4", "up3", "forward8", "forward3", "forward5", "down7", "down8", "forward5", "forward2", "down5", "down2", "forward2", "up9", "down3", "down5", "up7", "down4", "down2", "down7", "forward6", "down2", "forward1", "up4", "forward2", "forward2", "down5", "down1", "down1", "forward7", "forward6", "down7", "down5", "up1", "up3", "forward3", "forward9", "forward4", "down1", "down5", "forward3", "forward7", "down8", "forward8", "forward2", "forward7", "up7", "down7", "down4", "down2", "up6", "up1", "forward8", "up8", "up6", "down8", "forward1", "down5", "forward3", "down3", "down3", "forward1", "up3", "up3", "forward8", "forward8", "down8", "forward6", "forward2", "down7", "forward8", "down7", "up5", "forward7", "down1", "forward9", "up6", "down2", "up2", "up5", "forward6", "forward9", "forward3", "down8", "forward8", "down2", "up5", "down9", "forward5", "down6", "down3", "down9", "up8", "up3", "down2", "forward7", "forward4", "forward4", "forward8", "up6", "up4", "forward9", "down6", "down8", "up3", "up5", "forward8", "forward7", "forward4", "down8", "forward1", "forward5", "down9", "forward8", "up6", "down6", "down8", "down2", "forward4", "forward9", "forward2", "forward7", "down3", "forward3", "up6", "down4", "forward2", "up4", "down4", "forward4", "forward3", "forward1", "up6", "forward1", "down1", "forward7", "up4", "forward3", "down4", "up6", "up2", "up8", "down1", "down6", "down6", "down1", "down7", "forward8", "down9", "forward5", "up2", "up7", "up5", "down6", "up1", "up6", "forward4", "down7", "forward5", "forward1", "down6", "forward2", "down2", "forward9", "down9", "up6", "forward1", "up7", "down7", "forward1", "down6", "up1", "forward2", "forward1", "down4", "forward9", "forward7", "forward5", "down1", "forward2", "down2", "down2", "down5", "forward1", "up8", "forward9", "down7", "forward9", "down2", "up5", "down9", "down8", "down5", "forward8", "forward4", "down4", "down6", "forward1", "down5", "up6", "down3", "down3", "forward9", "down9", "forward6", "down5", "up6", "down5", "up7", "forward9", "down2", "down4", "down8", "forward4", "up7", "forward9", "forward7", "up5", "down7", "down5", "down1", "forward5", "forward4", "down2", "up3", "forward1", "up4", "up9", "down4", "forward3", "down4", "down9", "forward4", "up2", "up3", "forward7", "up6", "down8", "down8", "forward6", "forward2", "forward3", "forward9", "forward7", "down6", "down7", "down4", "down2", "forward8", "down6", "forward6", "forward6", "forward9", "down8", "down1", "up5", "down1", "forward9", "down1", "up8", "forward8", "down3", "forward1", "down9", "forward6", "forward4", "forward8", "down2", "up8", "down2", "up8", "down9", "down4", "up7", "forward7", "forward5", "down5", "down4", "up8", "forward1", "down7", "forward1", "up9", "forward9", "forward7", "forward9", "down9", "forward4", "down7", "forward6", "forward6", "up3", "forward2", "down5", "up8", "down1", "up8", "down4", "down1", "up6", "forward4", "forward3", "forward6", "down3", "forward4", "forward4", "forward4", "down8", "forward3", "up8", "up8", "down8", "forward6", "forward8", "up5", "forward6", "down8", "down7", "up4", "forward6", "forward9", "down9", "forward4", "up2", "forward1", "up3", "down9", "down8", "forward8", "forward8", "forward7", "down6", "down1", "up6", "up6", "forward9", "forward7", "forward7", "down3", "down6", "down9", "down4", "forward7", "forward3", "forward3", "down7", "up5", "down3", "forward6", "forward3", "forward5", "up3", "down7", "forward2", "up7", "forward9", "down3", "down9", "forward8", "forward5", "up7", "up2", "up8", "forward6", "down8", "forward2", "forward4", "up2", "forward2", "forward8", "forward4", "down8", "forward5", "down4", "down7", "forward3", "down3", "up1", "down9", "forward9", "down2", "down1", "forward1", "down6", "down3", "forward5", "down3", "down8", "up7", "down1", "up9", "down4", "forward9", "down4", "forward3", "forward6", "down3", "forward3", "down2", "down7", "down1", "up4", "down9", "down1", "down3", "down4", "down8", "down7", "forward4", "down4", "down9", "forward2", "forward7", "forward2", "down6", "up8", "forward6", "down2", "forward6", "up8", "forward6", "down9", "forward2", "forward6"]

horizontal_position = 0
depth = 0

puzzle_input.each do |input|
  movement = input[input.size-1].to_i
  # binding.pry if movement == 0
  depth += movement if input[0] == 'd'
  depth -= movement if input[0] == 'u'
  horizontal_position += movement if input[0] == 'f'
end

puts "horizontal_position equals #{horizontal_position}"
puts "depth equals #{depth}"
puts "sum equals #{depth * horizontal_position}"

horizontal_position = 0
depth = 0
aim = 0

puzzle_input.each do |input|
  movement = input[input.size-1].to_i
  # binding.pry if movement == 0
  aim += movement if input[0] == 'd'
  aim -= movement if input[0] == 'u'
  if input[0] == 'f'
    horizontal_position += movement
    depth += (aim * movement)
  end
end

puts "horizontal_position equals #{horizontal_position}"
puts "depth equals #{depth}"
puts "aim equals #{aim}"
puts "sum equals #{depth * horizontal_position}"
